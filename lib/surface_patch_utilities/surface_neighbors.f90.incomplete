!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

   module grid_block_structure

!  Module for a grid block with extra fields describing m nearest neighbors at
!  every point of a specified k plane. The neighbors are confined to the given
!  k plane, but may belong to other grid blocks.
!
!  Indexing:  nbr(1:m,1:3,1:%ni,1:%nj) where for the 2nd index,
!             1 = block #, 2 = i, 3 = j.

   type grid_type
      real,    dimension(:,:,:),   pointer :: x,y,z ! grid coordinates
      real,    dimension(:,:,:,:), pointer :: q     ! flow variables
      integer, dimension(:,:,:,:), pointer :: nbr   ! pointers for m neighbors
      real    :: xmin, xmax     ! Data range for the grid block in x direction
      real    :: ymin, ymax     ! ... and y direction ...
      real    :: zmin, zmax     ! ... and z direction
      integer :: ni             ! number of nodes in i direction
      integer :: nj             ! number of nodes in j direction
      integer :: nk             ! number of nodes in k direction
      integer :: mi             ! number of dependent variables in i direction
      integer :: mj             ! number of dependent variables in j direction
      integer :: mk             ! number of dependent variables in k direction
   end type grid_type

   end module grid_block_structure

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!
   subroutine surface_neighbors (npatches, sgrid, num_neighbors)
!
!  Determine the nearest m neighbors for each point of each patch of a multi-
!  block structured surface grid.  The neighbors at any point (i,j) of any
!  patch n are confined to the surface grid (expected to be the inner or outer
!  index plane of a volume grid), but may appear in more than one patch.
!  Smoothing of surface data across patch boundaries is the initial application.
!
!  Indexing is compatible with the (k,j,i) convention of the DPLR flow solver.
!
!  Each block of sgrid(:) has a field %nbr(1:m,1:3,1:%nj,1:%ni) where,
!  for the 2nd index, 1 = block #, 2 = j, 3 = i.
!
!  05/18/07  D. Saunders  Initial design.
!
!  Author:  David Saunders, ELORET Corp./NASA Ames Research Center, CA
!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

   use grid_block_structure

   implicit none

!  Arguments:

   integer, intent (in) :: npatches                   ! # grid patches
   type (grid_type), dimension (:), pointer :: sgrid  ! Multiblock surface grid
   integer, intent (in) :: num_neighbors              ! # neighbors specified

   end subroutine surface_neighbors
