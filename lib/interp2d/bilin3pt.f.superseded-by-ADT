C+------------------------------------------------------------------------------
C
      SUBROUTINE BILIN3PT (XA, YA, XB, YB, XC, YC, XP, YP, P, Q, IER)
C
C        BILIN3PT (BILinear INterpolation, 3 PoinT formula) determines 3-point
C     linear interpolation coefficients in 2-space.  Interpolation within a
C     triangulated surface (probably in parametric (u,v) space), involves:
C
C        (1) locating the cell (if any) containing the target point, and
C        (2) deriving a function value from the values of the function at that
C            cell's vertices (and there may be more than one function).
C
C        This routine serves both requirements: if the triangle defined by
C     points A, B, C contains the target point (XP,YP), an interpolated function
C     value is given by
C
C                      FP = (1 - p - q) FA + p FB + q FC
C
C     for some p, q, and (1 - p - q) all in [0, 1].  Values of p and q not
C     satisfying these constraints mean the calling program should continue
C     the search for the enclosing triangle.
C
C        Two linear equations in p and q are obtained by applying the above
C     to X and Y.  Solution by an in-lined form of Gaussian elimination with
C     row pivoting is used for efficiency and stability.  Singularity is
C     probably an indication of a collapsed triangle.  Failure with all cells
C     means either the target point is outside the mesh or the mesh is
C     corrupted.  Handling this is application-dependent.
C
C     12/09/97  DAS  3-point adaptation of BILINT 4-point method after finding
C                    the latter can be singular for non-convex quadrilaterals.
C
C     David Saunders, for James Reuther   NASA Ames, Moffett Field, CA.
C
C ------------------------------------------------------------------------------

      IMPLICIT NONE

C     Arguments:

      REAL XA, YA, XB, YB, XC, YC  ! I   Coordinates of triangle ABC vertices
      REAL XP, YP                  ! I   Target point coordinates
      REAL P, Q                    !   O Fractional coordinates
      INTEGER IER                  !   O 0 means the triangle encloses (XP, YP);
                                   !       P & Q are usable as bilinear coefs.
                                   !     1 means (XP, YP) isn't in the triangle
                                   !    -1 means P & Q could not be calculated
                                   !       because of matrix singularity.
C-------------------------------------------------------------------------------
C
C     Local constants:

      REAL, PARAMETER ::
     >   HALF = 0.5, ONE = 1., ZERO = 0., EPS = 5.* EPSILON (HALF)

C     Local variables:

      INTEGER M
      REAL    A(2,2), B(2), T

C     Procedures:

C**** EXTERNAL
C****>   LUSOLVE

C     Execution:

      A(1,1) = XB - XA
      A(2,1) = YB - YA
      A(1,2) = XC - XA
      A(2,2) = YC - YA
      B(1)   = XP - XA
      B(2)   = YP - YA

C*****CALL LUSOLVE (2, 2, A, B, IER)  ! Do it explicitly for 2x2 case:

C     Perform the LU factorization, solving L y = b as we go:

      M = 1     ! Determine pivot element
      T = A(1,1)
      IF (ABS (A(2,1)) .GT. ABS (T)) THEN
         A(1,1) = A(2,1)
         A(2,1) = T
         M = 2
      END IF

      IF (A(1,1) .EQ. ZERO) THEN  ! Singular matrix
         IER = -1
         GO TO 999
      END IF

      A(2,1) = -A(2,1) / A(1,1)  ! Store the multiplier

      T = A(M,2)     ! Apply the multiplier to the submatrix and RHS
      A(M,2) = A(1,2)
      A(1,2) = T
      A(2,2) = A(2,2) + A(2,1) * T

      T = B(M)
      B(M) = B(1)
      B(1) = T
      B(2) = B(2) + A(2,1) * T

      IF (A(2,2) .EQ. ZERO) THEN  !Singular matrix
         IER = -1
         GO TO 999
      END IF

      Q = B(2) / A(2,2)  ! Back substitution (solution of U x = y)
      P = (B(1) - A(1,2) * Q) / A(1,1)

      IER = 1  ! Assume most time is spent looking for the right cell
      IF (ABS (P + Q)    .GT. ONE  + EPS) GO TO 999
      IF (ABS (P - HALF) .GT. HALF + EPS) GO TO 999
      IF (ABS (Q - HALF) .GT. HALF + EPS) GO TO 999
      IER = 0

 999  RETURN
      END
